{"version":3,"sources":["actions/types.js","api/request.js","history.js","actions/index.js","components/auth/AuthButtons.jsx","components/Header.jsx","utils/superSort.js","components/Exercise/AddExercise.jsx","components/Exercise/SortForm.jsx","components/Exercise/EditExercise.jsx","components/Exercise/ExerciseItem.jsx","components/Exercise/Dashboard.jsx","components/auth/Login.jsx","components/auth/CreateAccount.jsx","components/Exercise/Landing.jsx","components/App.jsx","reducers/defaultState.js","reducers/index.js","reducers/authReducer.js","reducers/exerciseReducer.js","reducers/errorReducer.js","index.jsx"],"names":["ERROR","axios","create","baseURL","createHistory","authenticate","getState","headers","x-auth","auth","token","AuthButtons","initiateLogout","_this","props","logout","this","isSignedIn","react_default","a","createElement","className","onClick","Fragment","Link","to","renderAuthButtons","Component","connect","state","signedIn","dispatch","requestServer","delete","then","type","credentials","_id","username","history","push","catch","e","error","exists","message","Header","menu","handleClick","setState","cancelError","_this2","role","aria-label","rel","target","href","src","alt","aria-expanded","data-target","aria-hidden","id","auth_AuthButtons","class","superSort","options","b","length","slice","by","Error","dir","direction","Math","abs","comparedValA","mod","comparedValB","AddExercise","renderInput","_ref","input","label","meta","min","max","helpMessage","touched","htmlFor","Object","assign","visited","autoComplete","formValues","date","Date","moment","format","getTime","createExercise","document","getElementById","value","action","onSubmit","handleSubmit","bind","redux_form_es","name","component","AddExerciseForm","reduxForm","form","validate","_ref2","description","duration","errors","test","enableReinitialize","details","post","res","payload","data","console","log","Sort","checked","concat","SortForm","EditExercise","updateExercise","EditExerciseForm","update","patch","ExerciseItem","handleDeleteClick","deleteExercise","handleEditClick","getExercise","deleted","get","Dashboard","renderExercises","dateSort","sort","Number","dateDir","val","floor","durationSort","durationDir","exercise","list","map","ex","Exercise_ExerciseItem","key","fetchExercises","Exercise_AddExercise","Exercise_SortForm","selectedExercise","Exercise_EditExercise","initialValues","values","exercises","Login","login","formWrapped","password","CreateAccount","createAccount","passwordCheck","response","Landing","icon","icons","renderIcon","i","setInterval","App","Router","components_Header","Route","path","exact","defaultState","combineReducers","arguments","undefined","toConsumableArray","objectSpread","filter","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.9f0a0b12.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN'\nexport const ERROR = 'ERROR'\nexport const LOGOUT = 'LOGOUT'\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT'\nexport const CREATE_EXERCISE = 'CREATE_EXERCISE'\nexport const FETCH_EXERCISES = 'FETCH_EXERCISES'\nexport const GET_EXERCISE = 'GET_EXERCISE'\nexport const UPDATE_EXERCISE = 'UPDATE_EXERCISE'\nexport const DELETE_EXERCISE = 'DELETE_EXERCISE'\nexport const CANCEL_ERROR = 'CANCEL_ERROR'","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://exercise-tracker-oj.herokuapp.com/',\n})","import createHistory from 'history/createBrowserHistory';\nexport default createHistory()\n","import {\n    LOGIN,\n    LOGOUT,\n    CREATE_ACCOUNT,\n    CREATE_EXERCISE,\n    FETCH_EXERCISES,\n    GET_EXERCISE,\n    UPDATE_EXERCISE,\n    DELETE_EXERCISE,\n    ERROR,\n    CANCEL_ERROR,\n} from './types'\n\nimport requestServer from '../api/request'\nimport history from '../history';\n\nconst authenticate = (getState) => {\n    return {\n        headers: {\n            'x-auth': getState().auth.token\n        }\n    }\n}\n\nexport const createAccount = credentials => dispatch => {\n    return requestServer.post('/users', {\n        username: credentials.username,\n        password: credentials.password\n    }).then((res) => {\n        dispatch({\n            type: CREATE_ACCOUNT,\n            auth: {\n                signedIn: true,\n                token: res.headers['x-auth'],\n                credentials: res.data\n            }\n        })\n        history.push('/ExerciseTracker/')\n\n    }).catch((e) => {\n        console.log((e.response.data))\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: e.response.data\n            }\n        })\n    })\n}\nexport const login = credentials => (dispatch, getState) => {\n    if (getState().auth.signedIn) {\n        return history.push('/ExerciseTracker/')\n    }\n\n    return requestServer.post('/users/login', {\n        username: credentials.username,\n        password: credentials.password\n    }).then((res) => {\n        dispatch({\n            type: LOGIN,\n            credentials: res.data,\n            auth: {\n                signedIn: true,\n                token: res.headers['x-auth'],\n                credentials: res.data\n            }\n        })\n        history.push('/ExerciseTracker/')\n    }).catch((e) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: 'Invalid username or password'\n            }\n        })\n    })\n}\nexport const logout = () => (dispatch, getState) => {\n    return requestServer.delete('/users/logout', authenticate(getState))\n        .then(() => {\n            dispatch({\n                type: LOGOUT,\n                auth: {\n                    signedIn: false,\n                    token: '',\n                    credentials: {\n                        _id: '',\n                        username: ''\n                    }\n                }\n            })\n            history.push('/ExerciseTracker/')\n        }).catch((e) => {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Logout failed'\n                }\n            })\n        })\n}\nexport const createExercise = details => (dispatch, getState) => {\n    return requestServer.post('/exercise', details, authenticate(getState))\n        .then((res) => {\n            dispatch({\n                type: CREATE_EXERCISE,\n                payload: res.data\n            })\n        }).catch((e) => {\n            console.log(e)\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'There was an error'\n                }\n            })\n        })\n}\nexport const getExercise = id => (dispatch, getState) => {\n    return requestServer.get(`/exercise/${id}`, authenticate(getState))\n        .then((res) => {\n            dispatch({\n                type: GET_EXERCISE,\n                payload: res.data\n            })\n        }).catch((e) => {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Could not get exercise'\n                }\n            })\n        })\n}\nexport const fetchExercises = () => (dispatch, getState) => {\n    return requestServer.get('/exercise', authenticate(getState))\n        .then((res) => {\n            dispatch({\n                type: FETCH_EXERCISES,\n                payload: res.data.exercises\n            })\n        }).catch((e) => {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Could not get exercises'\n                }\n            })\n        })\n}\n\nexport const updateExercise = (id, update) => (dispatch, getState) => {\n    return requestServer.patch(`/exercise/${id}`, update, authenticate(getState))\n        .then((res) => {\n            dispatch({\n                type: UPDATE_EXERCISE,\n                payload: res.data\n            })\n        }).catch((e) => {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Could not update exercise'\n                }\n            })\n        })\n}\nexport const deleteExercise = (id) => (dispatch, getState) => {\n    return requestServer.delete(`/exercise/${id}`, authenticate(getState))\n        .then((res) => {\n            dispatch({\n                type: DELETE_EXERCISE,\n                deleted: id\n            })\n        }).catch((e) => {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Could not delete exercise'\n                }\n            })\n        })\n}\nexport const cancelError = () => dispatch => {\n    return dispatch({\n        type: CANCEL_ERROR,\n        error: {\n            exists: false,\n            message: ''\n        }\n    })\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../actions/index';\n\nclass AuthButtons extends Component {\n\n\n    initiateLogout = () => {\n        this.props.logout()\n    }\n    renderAuthButtons() {\n        if (!this.props.isSignedIn) {\n            return (\n                <>\n                    <Link className=\"button is-primary\" to=\"/ExerciseTracker/signup\">Sign Up</Link>\n                    <Link className=\"button\" to=\"/ExerciseTracker/login\">Login</Link>\n                </>\n            )\n        } else if (this.props.isSignedIn) {\n            return (\n                <button className=\"button is-warning\" onClick={this.initiateLogout}>Logout</button>\n            )\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.renderAuthButtons()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSignedIn: state.auth.signedIn\n    }\n}\nexport default connect(mapStateToProps, { logout })(AuthButtons);\n","import React, { Component } from 'react';\nimport AuthButtons from './auth/AuthButtons';\nimport { connect } from 'react-redux';\nimport { cancelError } from '../actions/index';\nimport { Link } from 'react-router-dom';\nclass Header extends Component {\n\n    state = {\n        menu: false\n    }\n\n    handleClick = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n    cancelError = () => {\n        this.props.cancelError()\n    }\n    render() {\n        const errorMessage = () => {\n            if (this.props.error.exists) {\n                return (\n                    <div className=\"columns is-centered \">\n                        <div className=\"column is-narrow\">\n                            <article class=\"message is-danger\">\n                                <div class=\"message-header\">\n                                    <p>Error</p>\n                                    <button class=\"delete\" aria-label=\"delete\" onClick={this.cancelError}></button>\n                                </div>\n                                <div class=\"message-body\">\n                                    {this.props.error.message}\n                                </div>\n                            </article>\n                        </div>\n                    </div>\n                )\n            }\n            return null\n        }\n        return (\n            <>\n                <nav className=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <a className=\"navbar-item\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://omarjuice.github.io/\"><img src=\"./OJICONtrue.png\" alt=\"icon\" /></a>\n\n                        <Link className=\"navbar-item staat is-size-4\" to=\"/ExerciseTracker\">\n                            Exercise Tracker\n                    </Link>\n                        <button className={this.state.menu ? \"navbar-burger burger is-active\" : \"navbar-burger burger\"} onClick={this.handleClick} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                        </button>\n                    </div>\n\n                    <div id=\"navbarBasicExample\" className={this.state.menu ? \"navbar-menu is-active\" : \"navbar-menu\"}>\n                        <div className=\"navbar-start\">\n\n                        </div>\n\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\">\n                                {this.props.username ? <p className=\"has-text-light\">Hey there, <strong className=\"has-text-light\">{this.props.username}</strong></p> : ''}\n                            </div>\n                            <div className=\"navbar-item\">\n                                <div className=\"buttons\">\n                                    <AuthButtons />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n                {errorMessage()}\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.auth.credentials.username,\n        error: state.error\n    }\n}\n\nexport default connect(mapStateToProps, { cancelError })(Header);\n","export const superSort = (options) => {\n    return function sorter(a, b) {\n        if (options.length < 1) {\n            return 0\n        }\n        if (!options[0]) {\n            return superSort(options.slice(1, options.length))(a, b)\n        }\n\n        if (!options[0].by) {\n            throw new Error('Parameter \"by\" of the options object is required')\n        }\n        let by = options[0].by;\n        if (!a[by] || !b[by]) {\n            return 0\n        }\n        let dir = options[0].direction && typeof options[0].direction === 'number' ? options[0].direction / Math.abs(options[0].direction) : 1\n        let comparedValA = options[0].mod ? options[0].mod(a[by]) : a[by];\n        let comparedValB = options[0].mod ? options[0].mod(b[by]) : b[by];\n\n        if (comparedValA > comparedValB) {\n            return dir * 1\n        }\n        if (comparedValA < comparedValB) {\n            return dir * -1\n        }\n        if (comparedValA === comparedValB) {\n            return superSort(options.slice(1, options.length))(a, b)\n        }\n        return 0\n    }\n}","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { createExercise } from '../../actions';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nclass AddExercise extends Component {\n\n    onSubmit(formValues) {\n\n        formValues.date = new Date(moment(formValues.date).format()).getTime()\n        this.props.createExercise(formValues)\n        document.getElementById('ex-description').value = ''\n        document.getElementById('ex-date').value = ''\n        document.getElementById('ex-duration').value = ''\n    }\n\n    renderInput = ({ input, label, type, meta, min, max, id }) => {\n        const className = () => {\n            if (!meta.touched) {\n                return 'input'\n            }\n            if (meta.error && meta.touched) {\n                return 'input is-danger'\n            }\n            if (meta.visited) {\n                return 'input is-success'\n            }\n            return 'input'\n        }\n        const helpMessage = <p className={meta.error && meta.touched ? 'help is-danger' : 'help is-invisible'}>{meta.error || 'Error'}</p>\n        return (\n            <div className=\"field\">\n                <label className=\"label\" htmlFor=\"\">{label}</label>\n                <div className=\"control\">\n                    <input id={id} className={className()} type={type} {...input} autoComplete=\"off\" min={min ? min : ''} max={max ? max : ''} />\n                    {helpMessage}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <h1 className=\"title is-4 has-text-centered staat\">Add</h1>\n                <form action=\"\" className=\"form has-text-centered\" onSubmit={this.props.handleSubmit(this.onSubmit.bind(this))}>\n                    <Field id=\"ex-description\" name=\"description\" component={this.renderInput} label=\"description\" type=\"text\" ></Field>\n                    <Field id=\"ex-duration\" name=\"duration\" component={this.renderInput} label=\"duration\" type=\"number\" min=\"0\" max=\"500\"></Field>\n                    <Field id=\"ex-date\" name=\"date\" component={this.renderInput} label=\"date\" type=\"date\"></Field>\n                    <button className=\"button is-success is-rounded\"><span className=\"icon\"><i class={'fas fa-plus'}></i></span></button>\n                </form>\n            </div>\n        );\n    }\n}\nconst validate = ({ description, duration, date }) => {\n    const errors = {}\n    let regex = /W+/g\n    if (!description) {\n        errors.description = \"You must enter a description\"\n    }\n    if (description && regex.test(description)) {\n        errors.description = \"Description must only consist of letters and numbers\"\n    }\n    if (!duration) {\n        errors.duration = \"You must enter a duration in minutes\"\n    }\n    return errors\n}\nconst AddExerciseForm = reduxForm({\n    form: 'AddExercise',\n    validate,\n    enableReinitialize: true\n})(AddExercise)\nexport default connect(null, { createExercise })(AddExerciseForm)","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n\nclass Sort extends Component {\n    onSubmit(formValues) {\n        console.log(formValues)\n    }\n    renderInput = ({ input, label, type, meta, checked }) => {\n        return (\n            <>\n                <label className={`${type}-label`} htmlFor=\"\">{label}</label>\n                <input className={type} type={type} {...input} checked={checked} />\n            </>\n        )\n    }\n    render() {\n        return (\n            <div className=\"box\">\n                <form action=\"\" className=\"form has-text-centered\" onSubmit={this.props.handleSubmit(this.onSubmit.bind(this))}>\n                    <div className=\"field\">\n                        <div className=\"contol\">\n                            <Field name=\"date\" component={this.renderInput} label=\"date\" type=\"checkbox\" ></Field>\n                        </div>\n                        <div className=\"control has-text-centered\">\n                            <Field name=\"dateDir\" component={this.renderInput} label=\"Ascending\" type=\"radio\" value={1} ></Field>\n                            <Field name=\"dateDir\" component={this.renderInput} label=\"Descending\" type=\"radio\" value={-1} ></Field>\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <div className=\"control has-text-centered\">\n                            <Field name=\"duration\" component={this.renderInput} label=\"duration\" type=\"checkbox\"  ></Field>\n                        </div>\n                        <div className=\"control has-text-centered\">\n                            <Field name=\"durationDir\" component={this.renderInput} label=\"Ascending\" type=\"radio\" value={1} ></Field>\n                            <Field name=\"durationDir\" component={this.renderInput} label=\"Descending\" type=\"radio\" value={-1} ></Field>\n                        </div>\n                    </div>\n                    <div className=\"has-text-centered\">\n                        <button className=\"button is-info\">\n                            Sort\n                    </button>\n                    </div>\n\n                </form>\n\n            </div>\n        );\n    }\n}\n\nconst SortForm = reduxForm({\n    form: \"Sort\",\n})(Sort)\n\nexport default SortForm;\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { updateExercise } from '../../actions/index';\n\nclass EditExercise extends Component {\n\n    onSubmit(formValues) {\n\n        formValues.date = new Date(moment(formValues.date).format()).getTime()\n        this.props.updateExercise(this.props.id, formValues)\n        document.getElementById('ex-description').value = ''\n        document.getElementById('ex-date').value = ''\n        document.getElementById('ex-duration').value = ''\n    }\n\n    renderInput = ({ input, label, type, meta, min, max, id }) => {\n        const className = () => {\n            if (!meta.touched) {\n                return 'input'\n            }\n            if (meta.error && meta.touched) {\n                return 'input is-danger'\n            }\n            if (meta.visited) {\n                return 'input is-success'\n            }\n            return 'input'\n        }\n        const helpMessage = <p className={meta.error && meta.touched ? 'help is-danger' : 'help is-invisible'}>{meta.error || 'Error'}</p>\n        return (\n            <div className=\"field\">\n                <label className=\"label\" htmlFor=\"\">{label}</label>\n                <div className=\"control\">\n                    <input id={id} className={className()} type={type} {...input} autoComplete=\"off\" min={min ? min : ''} max={max ? max : ''} />\n                    {helpMessage}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <h1 className=\"title is-4 has-text-centered staat\">Edit</h1>\n                <form action=\"\" className=\"form has-text-centered\" onSubmit={this.props.handleSubmit(this.onSubmit.bind(this))}>\n                    <Field id=\"ex-description\" name=\"description\" component={this.renderInput} label=\"description\" type=\"text\" ></Field>\n                    <Field id=\"ex-duration\" name=\"duration\" component={this.renderInput} label=\"duration\" type=\"number\" min=\"0\" max=\"500\"></Field>\n                    <Field id=\"ex-date\" name=\"date\" component={this.renderInput} label=\"date\" type=\"date\"></Field>\n                    <button className=\"button is-success is-rounded\"><span className=\"icon\"><i class=\"fas fa-edit\"></i></span></button>\n                </form>\n            </div>\n        );\n    }\n}\nconst validate = ({ description, duration, date }) => {\n    const errors = {}\n    let regex = /W+/g\n    if (!description) {\n        errors.description = \"You must enter a description\"\n    }\n    if (description && regex.test(description)) {\n        errors.description = \"Description must only consist of letters and numbers\"\n    }\n    if (!duration) {\n        errors.duration = \"You must enter a duration in minutes\"\n    }\n    return errors\n}\nconst EditExerciseForm = reduxForm({\n    form: 'EditExercise',\n    validate,\n    enableReinitialize: true\n})(EditExercise)\nexport default connect(null, { updateExercise })(EditExerciseForm)","import React, { Component } from 'react';\nimport { deleteExercise, getExercise } from '../../actions';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nclass ExerciseItem extends Component {\n    handleDeleteClick = () => {\n\n        this.props.deleteExercise(this.props.id)\n    }\n    handleEditClick = () => {\n        this.props.getExercise(this.props.id)\n    }\n    render() {\n        return (\n            <div className=\"column is-3\">\n\n                <div className=\"box ex-box has-text-centered\">\n                    <button className=\"icon is-pulled-left\" onClick={this.handleEditClick}><i class=\"fas fa-edit\"></i></button>\n                    <button className=\"delete is-pulled-right\" onClick={this.handleDeleteClick}></button>\n                    <ul class=\"list\">\n                        <li className=\"list-item\">{moment(this.props.date).format('M/DD/YY')} </li>\n                        <li className=\"list-item\">{this.props.description}</li>\n                        <li className=\"list-item\">{this.props.duration} mins</li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state) => {\n    ;\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStatetoProps, { deleteExercise, getExercise })(ExerciseItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchExercises } from '../../actions';\nimport { superSort } from '../../utils/superSort';\nimport AddExercise from './AddExercise';\nimport SortForm from './SortForm';\nimport EditExercise from './EditExercise';\nimport ExerciseItem from './ExerciseItem';\nclass Dashboard extends Component {\n\n\n    componentDidMount() {\n        this.props.fetchExercises()\n    }\n\n    renderExercises = () => {\n\n        let dateSort = this.props.sort && this.props.sort.date ? { by: 'date', direction: Number(this.props.sort.dateDir) || -1, mod: (val) => Math.floor(val / 86400000) } : null\n        let durationSort = this.props.sort && this.props.sort.duration ? { by: 'duration', direction: Number(this.props.sort.durationDir || -1) } : null\n        return this.props.exercise.list.sort(superSort([dateSort, durationSort]))\n            .map((ex) => {\n                return (\n                    <ExerciseItem key={ex._id} date={ex.date} description={ex.description} duration={ex.duration} id={ex._id} />\n                )\n            })\n    }\n\n    render() {\n        let message = <h1 className=\"title is-4\">You have no exercises listed</h1>\n        return (\n            <div className=\"container\">\n                <h1 className=\"title is-2 has-text-centered staat\">Dashboard</h1>\n                <div className=\"columns is-centered\">\n                    <div className=\"column is-one-third\">\n\n\n                        <AddExercise />\n\n                    </div>\n                    <div className=\"column is-one-third\">\n                        <SortForm />\n                        <div className=\"has-text-centered\">\n                            <h1 className=\"title is-2\">{this.props.exercise.list.length || '0'}</h1>\n                            <h1 className=\"title is-3\">items</h1>\n                        </div>\n                    </div>\n                    <div className=\"column is-one-third\">\n                        {!this.props.exercise.selectedExercise.description ? '' :\n                            <EditExercise id={this.props.exercise.selectedExercise._id} initialValues={{\n                                description: this.props.exercise.selectedExercise.description,\n                                duration: this.props.exercise.selectedExercise.duration,\n                                date: moment(this.props.exercise.selectedExercise.date).format('YYYY-DD-MM')\n                            }} />}\n                    </div>\n\n\n                </div>\n                <div className=\"columns is-multiline is-centered\">{this.props.exercise.list.length < 1 ? message : this.renderExercises()}</div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth,\n        exercise: state.exercise,\n        sort: state.form.Sort ? state.form.Sort.values : null\n    }\n}\nexport default connect(mapStateToProps, { fetchExercises })(Dashboard);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions';\nclass Login extends Component {\n\n    onSubmit(formValues) {\n        this.props.login(formValues)\n    }\n    renderInput = ({ input, label, type, meta }) => {\n        const className = () => {\n            if (!meta.touched) {\n                return 'input'\n            }\n            if (meta.error && meta.touched) {\n                return 'input is-danger'\n            }\n            if (meta.visited) {\n                return 'input is-success'\n            }\n        }\n        const helpMessage = () => {\n            if (meta.error && meta.touched) {\n                return <p className=\"help is-danger\">{meta.error}</p>\n            } else {\n                return <p className=\"help is-invisible\">No Error</p>\n            }\n        }\n        return (\n            <div className=\"field\">\n                <label className=\"label\" htmlFor=\"\">{label}</label>\n                <div className=\"control\">\n                    <input className={className()} type={type} {...input} autoComplete=\"off\" />\n                    {helpMessage()}\n\n                </div>\n            </div>\n        )\n    }\n    render() {\n        // let errorMessage = this.props.Error.exists ? this.props.Error.message : '';\n        return (\n            <div className=\"container\">\n                <div className=\"columns is-centered\">\n                    <div className=\"column is-one-third is-half-tablet is-full-mobile\">\n                        <h1 className=\"title is-1 has-text-centered staat\">Login</h1>\n                        <form action=\"\" onSubmit={this.props.handleSubmit(this.onSubmit.bind(this))} className=\"form has-text-centered\">\n                            <Field name=\"username\" component={this.renderInput} label=\"username\" type=\"text\"></Field>\n                            <Field name=\"password\" component={this.renderInput} label=\"password\" type=\"password\"></Field>\n\n                            <button className=\"button is-success\">Submit</button>\n\n                        </form>\n\n                    </div>\n                </div >\n            </div>\n        );\n    }\n}\nconst validate = (formValues) => {\n    const errors = {}\n    if (!formValues.username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!formValues.password) {\n        errors.password = 'You must enter a password'\n    }\n\n    return errors\n}\nconst formWrapped = reduxForm({\n    form: 'CreateAccount',\n    validate\n})(Login);\nconst mapStateToProps = (state) => {\n    return {\n        Error: state.error\n    }\n}\nexport default connect(mapStateToProps, { login })(formWrapped);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createAccount } from '../../actions/index';\n\nclass CreateAccount extends Component {\n\n    onSubmit(formValues) {\n        this.props.createAccount(formValues)\n    }\n    renderInput = ({ input, label, type, meta }) => {\n        const className = () => {\n            if (!meta.touched) {\n                return 'input'\n            }\n            if (meta.error && meta.touched) {\n                return 'input is-danger'\n            }\n            if (meta.visited) {\n                return 'input is-success'\n            }\n        }\n        const helpMessage = <p className={meta.error && meta.touched ? 'help is-danger' : 'help is-invisible'}>{meta.error || 'No Error'}</p>\n        return (\n            <div className=\"field\">\n                <label className=\"label\" htmlFor=\"\">{label}</label>\n                <div className=\"control\">\n                    <input className={className()} type={type} {...input} autoComplete=\"off\" />\n                    {helpMessage}\n                </div>\n            </div>\n        )\n    }\n    render() {\n        // let errorMessage = this.props.Error.exists ? this.props.Error.message : '';\n        return (\n            <div className=\"container\">\n                <div className=\"columns is-centered\">\n                    <div className=\"column is-one-third is-half-tablet is-full-mobile\">\n                        <h1 className=\"title is-1 has-text-centered staat\">Create an Account</h1>\n                        <form action=\"\" onSubmit={this.props.handleSubmit(this.onSubmit.bind(this))} className=\"form has-text-centered\">\n                            <Field name=\"username\" component={this.renderInput} label=\"username\" type=\"text\"></Field>\n                            <Field name=\"password\" component={this.renderInput} label=\"password\" type=\"password\"></Field>\n                            <Field name=\"passwordCheck\" component={this.renderInput} label=\"Please re-enter your password:\" type=\"password\"></Field>\n\n                            <button className=\"button is-success\">Submit</button>\n\n                        </form>\n\n                    </div>\n                </div >\n            </div>\n        );\n    }\n}\nconst validate = (formValues) => {\n    const errors = {}\n    let nameRegex = /\\W+/g\n    if (!formValues.username) {\n        errors.username = 'You must enter a username'\n    }\n    if (nameRegex.test(formValues.username)) {\n        errors.username = 'Invalid username, letters and numbers only'\n    }\n    if (formValues.username && formValues.username.length < 1) {\n        errors.username = 'Username must be at least one character'\n    }\n\n    if (!formValues.password) {\n        errors.password = 'You must enter a password'\n    }\n    if (formValues.password && formValues.password.length < 6) {\n        errors.password = 'Password should be at least 6 characters in length'\n    }\n    if (!formValues.passwordCheck) {\n        errors.passwordCheck = 'You must confirm your password'\n    }\n    if ((formValues.passwordCheck && formValues.password) && (formValues.password !== formValues.passwordCheck)) {\n        errors.passwordCheck = 'Passwords must match'\n    }\n    return errors\n}\nconst formWrapped = reduxForm({\n    form: 'CreateAccount',\n    validate\n})(CreateAccount);\nconst mapStateToProps = (state) => {\n    return {\n        Error: state.error\n    }\n}\nexport default connect(mapStateToProps, { createAccount })(formWrapped)","import React, { Component } from 'react';\n\nclass Landing extends Component {\n    state = {\n        icon: <span className=\"icon hero-icon\"><i className=\"fas fa-dumbbell fa-5x\"></i></span>,\n        icons: [<span className=\"icon hero-icon\"><i className=\"fas fa-running fa-5x\"></i></span>,\n        <span className=\"icon hero-icon\"><i className=\"fas fa-bicycle fa-5x\"></i></span>,\n        <span className=\"icon hero-icon\"><i className=\"fas fa-swimmer fa-5x\"></i></span>,\n        <span className=\"icon hero-icon\"><i className=\"fas fa-dumbbell fa-5x\"></i></span>,\n        ]\n    }\n    componentDidMount() {\n        console.log('rend3r');\n        this.renderIcon()\n    }\n    renderIcon = () => {\n        console.log('render')\n        let i = 0\n        let iconTimer = setInterval(() => {\n            this.setState({\n                icon: this.state.icons[i],\n            }, () => {\n                if (i < 3) {\n                    i++\n                } else if (i === 3) {\n                    i = 0\n                }\n            })\n        }, 1500)\n    }\n\n    render() {\n\n        return (\n            <section className=\"hero is-light is-fullheight-with-navbar\">\n                <div className=\"hero-body\">\n                    <div id=\"hero-container\" className=\"container\">\n                        <div id=\"title\" className=\"title staat is-1\">\n                            Track Your Workouts\n\n                        </div>\n                        <div id=\"icon1\" className=\"title is-1 icon-container\">\n                            {this.state.icon}\n                        </div>\n\n\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport Header from './Header';\nimport history from '../history'\nimport Dashboard from './Exercise/Dashboard';\nimport Login from './auth/Login';\nimport CreateAccount from './auth/CreateAccount';\nimport Landing from './Exercise/Landing';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n    render() {\n        return (\n            <div id=\"container\">\n                <Router history={history}>\n                    <div>\n                        <Header />\n                        <Route path=\"/ExerciseTracker\" exact component={this.props.isSignedIn ? Dashboard : Landing} />\n                        <Route path=\"/\" exact component={this.props.isSignedIn ? Dashboard : Landing} />\n                        <Route path=\"/ExerciseTracker/login\" exact component={Login} />\n                        <Route path=\"/ExerciseTracker/signup\" exact component={CreateAccount} />\n\n                    </div>\n\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSignedIn: state.auth.signedIn\n    }\n\n}\n\nexport default connect(mapStateToProps, null)(App);\n","const defaultState = {\n    auth: {\n        signedIn: false,\n        token: \"\",\n        credentials: {\n            _id: '',\n            username: \"\"\n        },\n    },\n    exercise: {\n        list: [],\n        selectedExercise: {}\n    },\n\n    error: {\n        exists: false,\n        message: ''\n    }\n}\n\nexport default defaultState","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form'\nimport authReducer from './authReducer';\nimport exerciseReducer from './exerciseReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    exercise: exerciseReducer,\n    error: errorReducer,\n    form: formReducer\n})","import defaultState from \"./defaultState\";\nimport { CREATE_ACCOUNT, LOGIN, LOGOUT } from \"../actions/types\";\n\n\n\nexport default (state = defaultState.auth, action) => {\n\n    switch (action.type) {\n        case CREATE_ACCOUNT:\n            return action.auth\n        case LOGIN:\n            return action.auth\n        case LOGOUT:\n            return action.auth\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { GET_EXERCISE, FETCH_EXERCISES, CREATE_EXERCISE, UPDATE_EXERCISE, DELETE_EXERCISE } from '../actions/types';\n\nexport default (state = defaultState.exercise, action) => {\n    switch (action.type) {\n        case GET_EXERCISE:\n            return { list: [...state.list], selectedExercise: action.payload }\n        case FETCH_EXERCISES:\n            return { ...state, list: action.payload };\n        case CREATE_EXERCISE:\n            return { ...state, list: [...state.list, action.payload] };\n        case UPDATE_EXERCISE:\n            return {\n                ...state, list: [...state.list.map((ex) => {\n                    if (ex._id === action.payload._id) {\n                        return action.payload\n                    }\n                    return ex\n                })], selectedExercise: {}\n            }\n        case DELETE_EXERCISE:\n            return { ...state, list: [...state.list.filter((ex) => ex._id !== action.deleted)] };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { ERROR, CANCEL_ERROR } from '../actions/types';\n\nexport default (state = defaultState.error, action) => {\n    switch (action.type) {\n        case ERROR:\n            return action.error;\n        case CANCEL_ERROR:\n            return action.error\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.querySelector('#root'))"],"sourceRoot":""}